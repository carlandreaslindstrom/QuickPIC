#!/bin/csh -f
#  qpic.e.cmd
#
#  AUTO-GENERATED by MATLAB
#  AUTHOR: CARL A. LINDSTROM (Uni. Oslo, 08.25.2016)
#
#  UGE job for qpic.e built %7$s PDT
#
#  The following items pertain to this script
#  Use current working directory
#$ -cwd
#  input           = /dev/null
#  output          = %1$s/qpic.e.joblog
#$ -o %1$s/qpic.e.joblog.$JOB_ID
#  error           = Merged with joblog
#$ -j y
#  The following items pertain to the user program
#  user program    = %1$s/qpic.e
#  arguments       = 
#  program input   = Specified by user program
#  program output  = Specified by user program
#  Parallelism:  %2$s-way parallel
#  Resources requested
#$ -pe %8$s %2$s
#$ -l h_data=%3$sM,h_rt=%4$s:%5$s:00
# # #
#
#  Name of application for log
#$ -v QQAPP=openmpi
#  Email address to notify
#$ -M %6$s@mail
#  Notify at beginning and end of job
#$ -m bea
#  Job is not rerunable
#$ -r n
#  Uncomment the next line to have your environment variables used by SGE
#$ -V
#
# Initialization for mpi parallel execution
#
  unalias *
  set qqversion = 
  set qqapp     = "openmpi parallel"
  set qqptasks  = %2$s
  set qqidir    = %1$s
  set qqjob     = qpic.e
  set qqodir    = %1$s
  cd     %1$s
  source /u/local/bin/qq.sge/qr.runtime
  if ($status != 0) exit (1)
#
  echo "UGE job for qpic.e built %7$s PDT"
  echo ""
  echo "  qpic.e directory:"
  echo "    "%1$s
  echo "  Submitted to UGE:"
  echo "    "$qqsubmit
  echo "  'scratch' directory (on each node):"
  echo "    $qqscratch"
  echo "  qpic.e %2$s-way parallel job configuration:"
  echo "    $qqconfig" | tr "\\\\" "\\n"
#
  echo ""
  echo "qpic.e started on:   "` hostname -s `
  echo "qpic.e started at:   "` date `
  echo ""
#
# Run the user program
#

  source /u/local/Modules/default/init/modules.csh
  module load intel/11.1
  module load openmpi/1.4

  setenv PATH /u/local/bin:$PATH

  if ( $HOST =~  n[0-9]* ) then
    set num=`echo $HOST | awk -F n '{print $2}'`
    if ( $num < 999 ) then
	set btl_command="-mca btl tcp,sm,self"
    else
	set btl_command=""
    endif
  else
        set btl_command=""
  endif

  echo $MPI_BIN/mpiexec $btl_command -n %2$s "" %1$s/qpic.e \\>\\& qpic.e.output.$JOB_ID
  echo ""

#  time $MPI_BIN/mpiexec  -n %2$s -machinefile $QQ_NODEFILE  \\
  time $MPI_BIN/mpiexec $btl_command -n %2$s -machinefile $QQ_NODEFILE  \\
         %1$s/qpic.e  >& %1$s/qpic.e.output.$JOB_ID 

  echo ""
  echo "qpic.e finished at:  "` date `

#
# Cleanup after mpi parallel execution
#
  source /u/local/bin/qq.sge/qr.runtime
#
  echo "-------- %1$s/qpic.e.joblog.$JOB_ID --------" >> /u/local/apps/queue.logs/openmpi.log.parallel
 if (`wc -l %1$s/qpic.e.joblog.$JOB_ID  | awk '{print $1}'` >= 1000) then
        head -50 %1$s/qpic.e.joblog.$JOB_ID >> /u/local/apps/queue.logs/openmpi.log.parallel
        echo " "  >> /u/local/apps/queue.logs/openmpi.log.parallel
        tail -10 %1$s/qpic.e.joblog.$JOB_ID >> /u/local/apps/queue.logs/openmpi.log.parallel
  else
        cat %1$s/qpic.e.joblog.$JOB_ID >> /u/local/apps/queue.logs/openmpi.log.parallel
  endif
#  cat            %1$s/qpic.e.joblog.$JOB_ID           >> /u/local/apps/queue.logs/openmpi.log.parallel
  exit (0)
